name: Build and Deploy iOS App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: macos-14
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode 15.1
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.1'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install Fastlane
        run: gem install fastlane

      - name: Install JS dependencies
        run: npm ci

      - name: Patch Expo Modules for Xcode 15.1
        run: |
          echo "Applying Expo modules patch for Xcode 15.1 compatibility..."
          cd ios
          ruby expo-modules-core-patch.rb

      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update
          echo "Disabling code signing for all Pods targets..."
          ruby disable_pods_signing.rb

      - name: Build and upload to TestFlight
        env:
          # Apple account/team
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          # Fastlane Match storage (use a separate, private repo)
          # Example secret value: https://x-access-token:${{ secrets.MATCH_GIT_TOKEN }}@github.com/your-org/ios-certificates.git
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH }}

          # Use a temporary keychain on CI to avoid UI prompts
          MATCH_KEYCHAIN_NAME: fastlane_tmp.keychain-db
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          # Match repo encryption password (required in non-interactive CI)
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          # App Store Connect API key (base64 encode .p8 contents for ASC_KEY_CONTENT)
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
        run: |
          cd ios
          export MATCH_PASSWORD="${MATCH_PASSWORD}"
          fastlane ios release

      - name: Tail gym log on failure
        if: failure()
        run: |
          LOG_DIR="$HOME/Library/Logs/gym"
          echo "Listing gym logs in: $LOG_DIR"
          ls -lah "$LOG_DIR" || true
          echo "---- Tail of gym log ----"
          tail -n 400 "$LOG_DIR"/OnoloGas-*.log || true
          echo "---- DerivedData build logs (paths) ----"
          find ~/Library/Developer/Xcode/DerivedData -type f -path "*Logs/Build/*" -name "*.log" -print | tail -n 50 || true

      - name: Upload xcodebuild/gym logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-logs
          path: |
            ~/Library/Logs/gym
            ~/Library/Developer/Xcode/DerivedData/**/Logs
          if-no-files-found: ignore
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/OnoloGas.ipa
